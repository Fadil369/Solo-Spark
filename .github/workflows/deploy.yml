name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run type checking
      run: npm run type-check

    - name: Run tests
      run: npm run test

    - name: Build project
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.node-version }}
        path: dist/

  security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for vulnerabilities
      run: npm audit --audit-level=high

  deploy-staging:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build for staging
      run: npm run build
      env:
        VITE_ENVIRONMENT: staging
        VITE_API_URL: ${{ secrets.STAGING_API_URL }}

    - name: Deploy to Vercel Staging
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        scope: ${{ secrets.VERCEL_ORG_ID }}

  deploy-production:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build for production
      run: npm run build
      env:
        VITE_ENVIRONMENT: production
        VITE_API_URL: ${{ secrets.PRODUCTION_API_URL }}
        VITE_ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        VITE_STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}

    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.12.x
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

    - name: Deploy to Vercel Production
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        scope: ${{ secrets.VERCEL_ORG_ID }}
        vercel-args: '--prod'

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          üöÄ **Solo-Spark Release v${{ github.run_number }}**

          ## Changes in this Release
          - Auto-generated from commit: ${{ github.sha }}
          - Build artifacts available
          - Deployed to production: https://solo-spark.brainsait.com

          ## Features
          - ‚úÖ AI-Powered Innovation Journey
          - ‚úÖ Real Payment Integration (SAR)
          - ‚úÖ Project Management & Export
          - ‚úÖ GitHub Integration
          - ‚úÖ Arabic/English Support
          - ‚úÖ Mobile-First Design

          **ŸÖŸÜ ÿßŸÑÿ£ŸÅŸÉÿßÿ± ÿ•ŸÑŸâ ÿßŸÑÿßÿ®ÿ™ŸÉÿßÿ± - From Ideas to Innovation**
        draft: false
        prerelease: false

  performance-monitoring:
    needs: [deploy-production]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Wait for deployment
      run: sleep 60

    - name: Performance Test
      run: |
        curl -f https://solo-spark.brainsait.com || exit 1
        echo "‚úÖ Production deployment successful"

    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        message: |
          üöÄ Solo-Spark v${{ github.run_number }} deployed successfully!

          üìä Performance: https://solo-spark.brainsait.com
          üîó Repository: ${{ github.repository }}
          üë§ Deployed by: ${{ github.actor }}

          ŸÖŸÜ ÿßŸÑÿ£ŸÅŸÉÿßÿ± ÿ•ŸÑŸâ ÿßŸÑÿßÿ®ÿ™ŸÉÿßÿ± ‚ú®
      if: always()
